#include <bits/stdc++.h>
using namespace std;

const int N = 1e5 + 10;
const int LOG = 17;

int st[N][LOG];
int logTable[N];

void buildSparseTable(vector<int>& arr, int n) {
    for (int i = 0; i < n; i++) {
        st[i][0] = arr[i];
    }
    for (int j = 1; (1 << j) <= n; j++) {
        for (int i = 0; i + (1 << j) <= n; i++) {
            st[i][j] = min(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);
        }
    }
    logTable[1] = 0;
    for (int i = 2; i <= n; i++) {
        logTable[i] = logTable[i / 2] + 1;
    }
}

int query(int L, int R) {
    int j = logTable[R - L + 1];
    return min(st[L][j], st[R - (1 << j) + 1][j]);
}

void solve() {
    int n, q;
    cin >> n >> q;
    vector<int> arr(n);
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    buildSparseTable(arr, n);
    while (q--) {
        int L, R;
        cin >> L >> R;
        cout << query(L, R) << endl;
    }
}

int32_t main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    solve();
    return 0;
}
